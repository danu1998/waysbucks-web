const { user, order, product, toping } = require("../../models");

exports.getOrders = async (req, res) => {
  try {
    let orders = await order.findAll({
      attributes: {
        exclude: ["createdAt", "updatedAt"],
      },
      include: [
        {
          model: product,
          as: "product",
          attributes: {
            exclude: ["createdAt", "updatedAt"],
          },
        },
        {
          model: toping,
          as: "toping",
          attributes: {
            exclude: ["createdAt", "updatedAt"],
          },
        },
      ],
    });

    orders = JSON.parse(JSON.stringify(orders));
    // orders = orders.map((item) => {
    //   return { ...item, image: process.env.FILE_PATH + item.image };
    // });
    res.send({
      status: "Success",
      data: {
        orders,
      },
    });
  } catch (error) {
    console.log(error);
    res.send({
      status: "Failed",
      message: "Get Data Order Failed",
    });
  }
};

exports.addOrder = async (req, res) => {
  try {
    let data = req.body;
    data = {
      ...data,
      idUser: req.user.id,
    };
    await order.create(data);
    res.send({
      status: "Success",
      data,
    });
  } catch (error) {
    console.log(error);
    res.status(500).send({
      status: "Failed",
      message: "Add order failed",
    });
  }
};

exports.getOrderByUser = async (req, res) => {
  try {
    const { id } = req.params;
    let data = await order.findAll({
      where: {
        idUser: req.user.id,
      },
      include: [
        {
          model: user,
          as: "user",
          attributes: {
            exclude: ["createdAt", "updatedAt"],
          },
        },
        {
          model: product,
          as: "product",
          attributes: {
            exclude: ["createdAt", "updatedAt"],
          },
        },
        {
          model: toping,
          as: "toping",
          attributes: {
            exclude: ["createdAt", "updatedAt"],
          },
        },
      ],
      attributes: {
        exclude: ["createdAt", "updatedAt"],
      },
    });

    data = JSON.parse(JSON.stringify(data));
    // data = data.map((item) => {
    //   return {
    //     ...item,
    //     image: process.env.PATH_FILE + item.image,
    //   };
    // });

    res.send({
      status: "Success",
      data,
    });
  } catch (error) {
    console.log(error);
    res.send({
      status: "Failed",
    });
  }
};
